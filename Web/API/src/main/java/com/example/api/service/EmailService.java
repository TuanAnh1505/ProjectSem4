package com.example.api.service;

import com.example.api.model.Booking;
import com.example.api.model.BookingPassenger;
import com.example.api.model.Payment;
import com.example.api.model.User;
import com.example.api.dto.TourItineraryDTO;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import jakarta.mail.internet.MimeMessage;
import org.springframework.stereotype.Service;
import jakarta.mail.MessagingException;
import java.util.List;
import java.time.format.DateTimeFormatter;
import java.util.Map;
import java.util.ArrayList;
import java.util.Collections;
import java.util.stream.Collectors;
import java.util.Comparator;
import com.example.api.repository.TourScheduleRepository;
import java.util.HashSet;
import java.util.Set;

@Service
public class EmailService {
    private static final Logger logger = LoggerFactory.getLogger(EmailService.class);

    @Autowired
    private JavaMailSender emailSender;

    @Autowired
    private TourScheduleRepository tourScheduleRepository;

    public void sendActivationEmail(String to, String publicId, boolean isApp, boolean isGuide) {
        logger.info("Preparing to send activation email to: {}", to);
        try {
            String webLink = "http://localhost:3000/activate?publicId=" + publicId;
            String appLink = "myapp://activate?publicId=" + publicId;

            MimeMessage mimeMessage = emailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true, "UTF-8");
            helper.setTo(to);

            String htmlContent;
            if (isGuide) {
                helper.setSubject("K√≠ch ho·∫°t t√†i kho·∫£n H∆∞·ªõng d·∫´n vi√™n - TravelTour");
                htmlContent = generateEmailTemplate(
                    "K√≠ch ho·∫°t t√†i kho·∫£n H∆∞·ªõng d·∫´n vi√™n",
                    "Ch√∫c m·ª´ng b·∫°n ƒë√£ ƒë∆∞·ª£c admin t·∫°o t√†i kho·∫£n h∆∞·ªõng d·∫´n vi√™n t·∫°i TravelTour.",
                    "Vui l√≤ng k√≠ch ho·∫°t t√†i kho·∫£n ƒë·ªÉ b·∫Øt ƒë·∫ßu s·ª≠ d·ª•ng c√°c ch·ª©c nƒÉng d√†nh cho h∆∞·ªõng d·∫´n vi√™n.",
                    webLink, appLink, isApp, "K√≠ch ho·∫°t t√†i kho·∫£n"
                );
            } else {
                helper.setSubject("K√≠ch ho·∫°t t√†i kho·∫£n TravelTour");
                htmlContent = generateEmailTemplate(
                    "K√≠ch ho·∫°t t√†i kho·∫£n TravelTour",
                    "C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i TravelTour.",
                    "B·∫°n c√≥ th·ªÉ k√≠ch ho·∫°t t√†i kho·∫£n b·∫±ng c√°ch nh·∫•p v√†o li√™n k·∫øt b√™n d∆∞·ªõi:",
                    webLink, appLink, isApp, "K√≠ch ho·∫°t t√†i kho·∫£n"
                );
            }
            
            helper.setText(htmlContent, true);
            emailSender.send(mimeMessage);
            logger.info("Successfully sent activation email to: {}", to);
        } catch (Exception e) {
            logger.error("Failed to send activation email to: {}. Error: {}", to, e.getMessage());
            // Don't throw exception to prevent registration failure
            // Instead, log the error and continue
            logger.warn("Email sending failed, but user registration will continue. User can request email resend later.");
        }
    }

    private String generateEmailTemplate(String title, String greeting, String description, 
                                       String webLink, String appLink, boolean isApp, String buttonText) {
        return String.format("""
            <!DOCTYPE html>
            <html lang="vi">
            <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>%s</title>
                <style>
                    * {
                        margin: 0;
                        padding: 0;
                        box-sizing: border-box;
                    }
                    body {
                        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                        line-height: 1.6;
                        color: #333;
                        background-color: #f4f6f8;
                    }
                    .email-container {
                        max-width: 600px;
                        margin: 0 auto;
                        background-color: #ffffff;
                        border-radius: 12px;
                        overflow: hidden;
                        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
                    }
                    .header {
                        background: linear-gradient(135deg, #1976d2 0%%, #42a5f5 100%%);
                        color: white;
                        padding: 40px 30px;
                        text-align: center;
                    }
                    .header h1 {
                        font-size: 28px;
                        font-weight: 600;
                        margin-bottom: 10px;
                    }
                    .header p {
                        font-size: 16px;
                        opacity: 0.9;
                    }
                    .content {
                        padding: 40px 30px;
                    }
                    .greeting {
                        font-size: 18px;
                        color: #1976d2;
                        margin-bottom: 20px;
                        font-weight: 500;
                    }
                    .description {
                        font-size: 16px;
                        color: #555;
                        margin-bottom: 30px;
                        line-height: 1.7;
                    }
                    .button-container {
                        text-align: center;
                        margin: 30px 0;
                    }
                    .cta-button {
                        display: inline-block;
                        padding: 16px 32px;
                        background: linear-gradient(135deg, #28a745 0%%, #20c997 100%%);
                        color: white;
                        text-decoration: none;
                        border-radius: 8px;
                        font-size: 16px;
                        font-weight: 600;
                        transition: all 0.3s ease;
                        box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);
                    }
                    .cta-button:hover {
                        transform: translateY(-2px);
                        box-shadow: 0 6px 20px rgba(40, 167, 69, 0.4);
                    }
                    .app-button {
                        display: inline-block;
                        padding: 12px 24px;
                        background: linear-gradient(135deg, #6f42c1 0%%, #8e44ad 100%%);
                        color: white;
                        text-decoration: none;
                        border-radius: 6px;
                        font-size: 14px;
                        font-weight: 500;
                        margin-top: 15px;
                        transition: all 0.3s ease;
                    }
                    .app-button:hover {
                        transform: translateY(-1px);
                    }
                    .info-box {
                        background-color: #e3f2fd;
                        border-left: 4px solid #1976d2;
                        padding: 20px;
                        margin: 25px 0;
                        border-radius: 0 8px 8px 0;
                    }
                    .info-box h3 {
                        color: #1976d2;
                        margin-bottom: 10px;
                        font-size: 16px;
                    }
                    .info-box p {
                        color: #555;
                        font-size: 14px;
                        margin: 0;
                    }
                    .footer {
                        background-color: #f8f9fa;
                        padding: 30px;
                        text-align: center;
                        border-top: 1px solid #e9ecef;
                    }
                    .footer p {
                        color: #666;
                        font-size: 14px;
                        margin-bottom: 10px;
                    }
                    .footer .contact-info {
                        color: #1976d2;
                        font-weight: 500;
                    }
                    .logo {
                        font-size: 24px;
                        font-weight: bold;
                        margin-bottom: 10px;
                    }
                    @media only screen and (max-width: 600px) {
                        .email-container {
                            margin: 10px;
                            border-radius: 8px;
                        }
                        .header, .content, .footer {
                            padding: 20px;
                        }
                        .header h1 {
                            font-size: 24px;
                        }
                        .cta-button {
                            padding: 14px 28px;
                            font-size: 15px;
                        }
                    }
                </style>
            </head>
            <body>
                <div class="email-container">
                    <div class="header">
                        <div class="logo">üåç TravelTour</div>
                        <h1>%s</h1>
                        <p>Kh√°m ph√° Vi·ªát Nam c√πng ch√∫ng t√¥i</p>
                    </div>
                    
                    <div class="content">
                        <div class="greeting">Xin ch√†o!</div>
                        <div class="description">
                            %s<br><br>
                            %s
                        </div>
                        
                        <div class="button-container">
                            <a href="%s" class="cta-button">%s tr√™n Web</a>
                            %s
                        </div>
                        
                        <div class="info-box">
                            <h3>üìß Th√¥ng tin quan tr·ªçng</h3>
                            <p>‚Ä¢ Li√™n k·∫øt n√†y s·∫Ω h·∫øt h·∫°n sau 24 gi·ªù<br>
                            ‚Ä¢ ƒê·∫£m b·∫£o b·∫°n ƒëang s·ª≠ d·ª•ng tr√¨nh duy·ªát an to√†n<br>
                            ‚Ä¢ N·∫øu c√≥ v·∫•n ƒë·ªÅ, vui l√≤ng li√™n h·ªá h·ªó tr·ª£</p>
                        </div>
                    </div>
                    
                    <div class="footer">
                        <p><strong>TravelTour</strong> - D·ªãch v·ª• du l·ªãch h√†ng ƒë·∫ßu Vi·ªát Nam</p>
                        <p class="contact-info">üìû Hotline: 1900 xxxx | üìß Email: support@traveltour.com</p>
                        <p>üìç ƒê·ªãa ch·ªâ: 123 ƒê∆∞·ªùng Du L·ªãch, Qu·∫≠n 1, TP.HCM</p>
                        <p style="margin-top: 15px; font-size: 12px; color: #999;">
                            ¬© 2024 TravelTour. M·ªçi quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.
                        </p>
                    </div>
                </div>
            </body>
            </html>
            """,
            title, title, greeting, description, webLink, buttonText,
            isApp ? String.format("<br><a href=\"%s\" class=\"app-button\">%s tr√™n App</a>", appLink, buttonText) : ""
        );
    }

    public void sendPasswordResetEmail(String to, String publicId, boolean isApp) {
        logger.info("Preparing to send password reset email to: {}", to);
        MimeMessage mimeMessage = emailSender.createMimeMessage();
        try {
            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true, "UTF-8");
            helper.setTo(to);
            helper.setSubject("ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u - TravelTour");

            String webLink = "http://localhost:3000/reset-password?publicId=" + publicId;
            String appLink = "myapp://reset-password?publicId=" + publicId;

            String htmlContent = generateEmailTemplate(
                "ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u TravelTour",
                "Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n.",
                "Vui l√≤ng ch·ªçn m·ªôt trong c√°c c√°ch sau ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u:",
                webLink, appLink, isApp, "ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u"
            );

            helper.setText(htmlContent, true);
            emailSender.send(mimeMessage);
            logger.info("Successfully sent password reset email to: {}", to);
        } catch (MessagingException e) {
            logger.error("Failed to send password reset email to: {}. Error: {}", to, e.getMessage());
            throw new RuntimeException("G·ª≠i email th·∫•t b·∫°i", e);
        }
    }

    public void sendDiscountCodeEmail(String to, String code, String description) {
        logger.info("Preparing to send discount code email to: {}", to);
        SimpleMailMessage message = new SimpleMailMessage();
        message.setTo(to);
        message.setSubject("M√£ gi·∫£m gi√° ƒë·∫∑c bi·ªát t·ª´ TravelTour");
        message.setText("Xin ch√†o,\n\n" +
                "C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i TravelTour. " +
                "Ch√∫ng t√¥i g·ª≠i t·∫∑ng b·∫°n m√£ gi·∫£m gi√° ƒë·∫∑c bi·ªát:\n\n" +
                "M√£ gi·∫£m gi√°: " + code + "\n" +
                "M√¥ t·∫£: " + description + "\n\n" +
                "H√£y s·ª≠ d·ª•ng m√£ n√†y trong l·∫ßn ƒë·∫∑t tour ƒë·∫ßu ti√™n c·ªßa b·∫°n!\n\n" +
                "Tr√¢n tr·ªçng,<br>ƒê·ªôi ng≈© TravelTour");
        try {
            emailSender.send(message);
            logger.info("Successfully sent discount code email to: {}", to);
        } catch (Exception e) {
            logger.error("Failed to send discount code email to: {}. Error: {}", to, e.getMessage());
            throw new RuntimeException("G·ª≠i email th·∫•t b·∫°i: " + e.getMessage());
        }
    }

    public void resendActivationEmail(String to, String publicId, boolean isApp) {
        logger.info("Preparing to resend activation email to: {}", to);
        try {
            String webLink = "http://localhost:3000/activate?publicId=" + publicId;
            String appLink = "myapp://activate?publicId=" + publicId;

            MimeMessage mimeMessage = emailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true, "UTF-8");
            helper.setTo(to);
            helper.setSubject("Y√™u c·∫ßu g·ª≠i l·∫°i email k√≠ch ho·∫°t - TravelTour");

            String htmlContent = generateEmailTemplate(
                "G·ª≠i l·∫°i email k√≠ch ho·∫°t",
                "Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu g·ª≠i l·∫°i email k√≠ch ho·∫°t t√†i kho·∫£n TravelTour c·ªßa b·∫°n.",
                "B·∫°n c√≥ th·ªÉ k√≠ch ho·∫°t t√†i kho·∫£n b·∫±ng c√°ch nh·∫•p v√†o li√™n k·∫øt b√™n d∆∞·ªõi:",
                webLink, appLink, isApp, "K√≠ch ho·∫°t t√†i kho·∫£n"
            );

            helper.setText(htmlContent, true);
            emailSender.send(mimeMessage);
            logger.info("Successfully resent activation email to: {}", to);
        } catch (Exception e) {
            logger.error("Failed to resend activation email to: {}. Error: {}", to, e.getMessage());
            throw new RuntimeException("G·ª≠i l·∫°i email k√≠ch ho·∫°t th·∫•t b·∫°i: " + e.getMessage());
        }
    }

    public void sendPaymentSuccessEmail(User user, Booking booking, Payment payment,
            List<BookingPassenger> passengers) {
        logger.info("Preparing to send payment success email to all passengers with emails");
        try {
            // Get schedule information
            var scheduleOpt = tourScheduleRepository.findById(booking.getScheduleId());
            String startDate = "N/A";
            String endDate = "N/A";

            if (scheduleOpt.isPresent()) {
                var schedule = scheduleOpt.get();
                startDate = schedule.getStartDate().format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));
                endDate = schedule.getEndDate().format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            }

            String subject = "X√°c nh·∫≠n thanh to√°n th√†nh c√¥ng - ƒê·∫∑t tour " + booking.getBookingId();

            String content = String.format(
                    """
                            <html>
                            <head>
                                <meta charset="UTF-8">
                            </head>
                            <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                                <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                                    <div style="text-align: center; margin-bottom: 30px;">
                                        <h1 style="color: #28a745; margin-bottom: 10px;">Thanh to√°n th√†nh c√¥ng!</h1>
                                        <p style="color: #666;">C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t tour v·ªõi TravelTour</p>
                                    </div>

                                    <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                                        <h2 style="color: #1976d2; margin-top: 0;">Th√¥ng tin ƒë·∫∑t tour</h2>
                                        <p><strong>M√£ ƒë·∫∑t tour:</strong> %s</p>
                                        <p><strong>T√™n tour:</strong> %s</p>
                                        <p><strong>Ng√†y kh·ªüi h√†nh:</strong> %s</p>
                                        <p><strong>Ng√†y k·∫øt th√∫c:</strong> %s</p>
                                    </div>

                                    <div style="background-color: #e8f4f8; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                                        <h2 style="color: #17a2b8; margin-top: 0;">Th√¥ng tin thanh to√°n</h2>
                                        <p><strong>T·ªïng ti·ªÅn:</strong> %s VND</p>
                                        <p><strong>Ph∆∞∆°ng th·ª©c thanh to√°n:</strong> %s</p>
                                        <p><strong>Tr·∫°ng th√°i:</strong> <span style="color: #28a745;">ƒê√£ thanh to√°n th√†nh c√¥ng</span></p>
                                    </div>

                                    <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                                        <h2 style="color: #1976d2; margin-top: 0;">Danh s√°ch h√†nh kh√°ch</h2>
                                        <table style="width: 100%%; border-collapse: collapse; margin-top: 10px;">
                                            <tr style="background-color: #e9ecef;">
                                                <th style="padding: 10px; text-align: left; border-bottom: 1px solid #ddd;">H·ªç v√† t√™n</th>
                                                <th style="padding: 10px; text-align: left; border-bottom: 1px solid #ddd;">S·ªë ƒëi·ªán tho·∫°i</th>
                                            </tr>
                                            %s
                                        </table>
                                    </div>

                                    <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px;">
                                        <h2 style="color: #1976d2; margin-top: 0;">L∆∞u √Ω quan tr·ªçng</h2>
                                        <ul style="padding-left: 20px;">
                                            <li>Vui l√≤ng ƒë·∫øn ƒë√∫ng ƒëi·ªÉm ƒë√≥n tr∆∞·ªõc gi·ªù kh·ªüi h√†nh 30 ph√∫t</li>
                                            <li>Mang theo gi·∫•y t·ªù t√πy th√¢n (CMND/CCCD/H·ªô chi·∫øu)</li>
                                            <li>Chu·∫©n b·ªã ƒë·ªì d√πng c√° nh√¢n c·∫ßn thi·∫øt</li>
                                            <li>N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá hotline: 1900 xxxx</li>
                                        </ul>
                                    </div>

                                    <div style="margin-top: 30px; text-align: center; color: #666;">
                                        <p>Tr√¢n tr·ªçng,<br>ƒê·ªôi ng≈© TravelTour</p>
                                    </div>
                                </div>
                            </body>
                            </html>
                            """,
                    booking.getBookingCode(),
                    booking.getTour().getName(),
                    startDate,
                    endDate,
                    payment.getAmount(),
                    payment.getPaymentMethod().getMethodName(),
                    generatePassengerTableRows(passengers));

            // T·∫°o danh s√°ch email duy nh·∫•t ƒë·ªÉ g·ª≠i
            Set<String> uniqueEmails = new HashSet<>();
            
            // Th√™m email c·ªßa user ch√≠nh
            if (user.getEmail() != null && !user.getEmail().trim().isEmpty()) {
                uniqueEmails.add(user.getEmail().trim());
            }
            
            // Th√™m email c·ªßa t·∫•t c·∫£ passengers c√≥ email
            for (BookingPassenger passenger : passengers) {
                if (passenger.getEmail() != null && !passenger.getEmail().trim().isEmpty()) {
                    uniqueEmails.add(passenger.getEmail().trim());
                }
            }

            logger.info("Sending payment success email to {} unique email addresses: {}", 
                       uniqueEmails.size(), uniqueEmails);

            // G·ª≠i email cho t·∫•t c·∫£ email duy nh·∫•t
            for (String email : uniqueEmails) {
                try {
                    MimeMessage mimeMessage = emailSender.createMimeMessage();
                    MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true, "UTF-8");
                    helper.setTo(email);
                    helper.setSubject(subject);
                    helper.setText(content, true);
                    helper.setFrom("noreply@traveltour.com", "TravelTour");
                    emailSender.send(mimeMessage);
                    logger.info("Successfully sent payment success email to: {}", email);
                } catch (Exception e) {
                    logger.error("Failed to send payment success email to: {}. Error: {}", email, e.getMessage());
                    // Ti·∫øp t·ª•c g·ª≠i cho c√°c email kh√°c n·∫øu m·ªôt email b·ªã l·ªói
                }
            }
        } catch (Exception e) {
            logger.error("Failed to prepare payment success email. Error: {}", e.getMessage());
            e.printStackTrace();
        }
    }

    private String generatePassengerTableRows(List<BookingPassenger> passengers) {
        StringBuilder rows = new StringBuilder();
        for (BookingPassenger passenger : passengers) {
            rows.append(String.format("""
                    <tr>
                        <td style="padding: 10px; border-bottom: 1px solid #ddd;">%s</td>
                        <td style="padding: 10px; border-bottom: 1px solid #ddd;">%s</td>
                    </tr>
                    """,
                    passenger.getFullName(),
                    passenger.getPhone() != null ? passenger.getPhone() : "N/A"));
        }
        return rows.toString();
    }

    public void sendHtmlEmail(String to, String subject, String htmlContent) {
        logger.info("Preparing to send HTML email to: {}", to);
        try {
            MimeMessage mimeMessage = emailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true, "UTF-8");
            helper.setTo(to);
            helper.setSubject(subject);
            helper.setText(htmlContent, true);
            emailSender.send(mimeMessage);
            logger.info("Successfully sent HTML email to: {}", to);
        } catch (Exception e) {
            logger.error("Failed to send HTML email to: {}. Error: {}", to, e.getMessage());
            e.printStackTrace();
        }
    }

    public void sendFeedbackRequestEmail(String to, String userName, String tourName, String endDate,
            String webFeedbackLink, String appFeedbackLink) {
        String subject = "Y√™u c·∫ßu ƒë√°nh gi√° tour " + tourName;
        String content = String.format(
                """
                        <html>
                        <head>
                            <meta charset='UTF-8'>
                        </head>
                        <body style='background: #f4f6f8; margin: 0; padding: 0;'>
                            <table width='100%%' cellpadding='0' cellspacing='0' style='background: #f4f6f8; padding: 0; margin: 0;'>
                                <tr>
                                    <td align='center'>
                                        <table width='600' cellpadding='0' cellspacing='0' style='background: #fff; border-radius: 12px; box-shadow: 0 2px 12px rgba(0,0,0,0.07); margin: 32px 0; padding: 0;'>
                                            <tr>
                                                <td style='padding: 40px 32px 32px 32px; text-align: left; font-family: Segoe UI, Arial, sans-serif;'>
                                                    <h1 style='color: #1976d2; font-size: 2.1rem; margin-bottom: 10px; margin-top: 0;'>Xin ch√†o %s,</h1>
                                                    <p style='font-size: 1.13rem; color: #222; margin: 0 0 10px 0;'>Tour <b>%s</b> c·ªßa b·∫°n ƒë√£ k·∫øt th√∫c v√†o ng√†y <b>%s</b>.</p>
                                                    <p style='font-size: 1.13rem; color: #222; margin: 0 0 28px 0;'>Ch√∫ng t√¥i r·∫•t mong nh·∫≠n ƒë∆∞·ª£c ƒë√°nh gi√° c·ªßa b·∫°n v·ªÅ tr·∫£i nghi·ªám tour n√†y.</p>
                                                    <div style='text-align: center; margin: 32px 0 18px 0;'>
                                                        <a href='%s' style='display: inline-block; padding: 16px 40px; background: #1976d2; color: #fff; text-decoration: none; border-radius: 8px; font-size: 1.15rem; font-weight: 600; box-shadow: 0 2px 8px rgba(25,118,210,0.08); letter-spacing: 0.5px;'>G·ª≠i ƒë√°nh gi√° ngay</a>
                                                    </div>
                                                    <p style='font-size: 1rem; color: #444; margin-bottom: 16px; text-align: center;'>Ho·∫∑c b·∫°n c√≥ th·ªÉ m·ªü ·ª©ng d·ª•ng di ƒë·ªông v√† truy c·∫≠p v√†o ph·∫ßn ƒë√°nh gi√° tour:</p>
                                                    <div style='text-align: center; margin-bottom: 32px;'>
                                                        <a href='%s' style='display: inline-block; padding: 12px 32px; background: #43a047; color: #fff; text-decoration: none; border-radius: 8px; font-size: 1rem; font-weight: 500;'>ƒê√°nh gi√° qua App</a>
                                                    </div>
                                                    <div style='background: #f8f9fa; border-radius: 6px; padding: 18px 18px 14px 18px; color: #666; font-size: 1rem; margin-bottom: 30px;'>
                                                        <b style='color: #1976d2;'>L∆∞u √Ω:</b> ƒê√°nh gi√° c·ªßa b·∫°n s·∫Ω gi√∫p ch√∫ng t√¥i c·∫£i thi·ªán d·ªãch v·ª• t·ªët h∆°n.<br>
                                                        N·∫øu c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o, vui l√≤ng li√™n h·ªá: <a href='mailto:support@traveltour.com' style='color: #1976d2;'>support@traveltour.com</a> ho·∫∑c hotline: 1900 xxxx.
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style='padding: 0 32px 28px 32px; text-align: left; font-family: Segoe UI, Arial, sans-serif; color: #888; font-size: 0.98rem; border-top: 1px solid #eee;'>
                                                    <div style='margin-top: 24px;'>
                                                        <span style='color: #888;'>¬© %d TravelTour. M·ªçi quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</span><br>
                                                        <span style='color: #888;'>ƒê·ªãa ch·ªâ: 123 ƒê∆∞·ªùng Du L·ªãch, Qu·∫≠n 1, TP.HCM</span>
                                                    </div>
                                                </td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                            </table>
                        </body>
                        </html>
                        """,
                userName, tourName, endDate, webFeedbackLink, appFeedbackLink, java.time.Year.now().getValue());
        try {
            MimeMessage mimeMessage = emailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true, "UTF-8");
            helper.setTo(to);
            helper.setSubject(subject);
            helper.setText(content, true);
            helper.setFrom("feedback@traveltour.com", "TravelTour Feedback");
            emailSender.send(mimeMessage);
            logger.info("Successfully sent feedback request email to: {}", to);
        } catch (Exception e) {
            logger.error("Failed to send feedback request email to: {}. Error: {}", to, e.getMessage());
            e.printStackTrace();
        }
    }

    // Method m·ªõi ƒë·ªÉ g·ª≠i email y√™u c·∫ßu feedback cho t·∫•t c·∫£ passengers
    public void sendFeedbackRequestEmailToAllPassengers(User user, List<BookingPassenger> passengers,
            String tourName, String endDate, String webFeedbackLink, String appFeedbackLink) {
        logger.info("Preparing to send feedback request email to all passengers with emails");
        
        // T·∫°o danh s√°ch email duy nh·∫•t
        Set<String> uniqueEmails = new HashSet<>();
        
        // Th√™m email c·ªßa user ch√≠nh
        if (user.getEmail() != null && !user.getEmail().trim().isEmpty()) {
            uniqueEmails.add(user.getEmail().trim());
        }
        
        // Th√™m email c·ªßa t·∫•t c·∫£ passengers c√≥ email
        for (BookingPassenger passenger : passengers) {
            if (passenger.getEmail() != null && !passenger.getEmail().trim().isEmpty()) {
                uniqueEmails.add(passenger.getEmail().trim());
            }
        }

        logger.info("Sending feedback request email to {} unique email addresses: {}", 
                   uniqueEmails.size(), uniqueEmails);

        String subject = "Y√™u c·∫ßu ƒë√°nh gi√° tour " + tourName;
        String content = String.format(
                """
                        <html>
                        <head>
                            <meta charset='UTF-8'>
                        </head>
                        <body style='background: #f4f6f8; margin: 0; padding: 0;'>
                            <table width='100%%' cellpadding='0' cellspacing='0' style='background: #f4f6f8; padding: 0; margin: 0;'>
                                <tr>
                                    <td align='center'>
                                        <table width='600' cellpadding='0' cellspacing='0' style='background: #fff; border-radius: 12px; box-shadow: 0 2px 12px rgba(0,0,0,0.07); margin: 32px 0; padding: 0;'>
                                            <tr>
                                                <td style='padding: 40px 32px 32px 32px; text-align: left; font-family: Segoe UI, Arial, sans-serif;'>
                                                    <h1 style='color: #1976d2; font-size: 2.1rem; margin-bottom: 10px; margin-top: 0;'>Xin ch√†o,</h1>
                                                    <p style='font-size: 1.13rem; color: #222; margin: 0 0 10px 0;'>Tour <b>%s</b> ƒë√£ k·∫øt th√∫c v√†o ng√†y <b>%s</b>.</p>
                                                    <p style='font-size: 1.13rem; color: #222; margin: 0 0 28px 0;'>Ch√∫ng t√¥i r·∫•t mong nh·∫≠n ƒë∆∞·ª£c ƒë√°nh gi√° c·ªßa b·∫°n v·ªÅ tr·∫£i nghi·ªám tour n√†y.</p>
                                                    <div style='text-align: center; margin: 32px 0 18px 0;'>
                                                        <a href='%s' style='display: inline-block; padding: 16px 40px; background: #1976d2; color: #fff; text-decoration: none; border-radius: 8px; font-size: 1.15rem; font-weight: 600; box-shadow: 0 2px 8px rgba(25,118,210,0.08); letter-spacing: 0.5px;'>G·ª≠i ƒë√°nh gi√° ngay</a>
                                                    </div>
                                                    <p style='font-size: 1rem; color: #444; margin-bottom: 16px; text-align: center;'>Ho·∫∑c b·∫°n c√≥ th·ªÉ m·ªü ·ª©ng d·ª•ng di ƒë·ªông v√† truy c·∫≠p v√†o ph·∫ßn ƒë√°nh gi√° tour:</p>
                                                    <div style='text-align: center; margin-bottom: 32px;'>
                                                        <a href='%s' style='display: inline-block; padding: 12px 32px; background: #43a047; color: #fff; text-decoration: none; border-radius: 8px; font-size: 1rem; font-weight: 500;'>ƒê√°nh gi√° qua App</a>
                                                    </div>
                                                    <div style='background: #f8f9fa; border-radius: 6px; padding: 18px 18px 14px 18px; color: #666; font-size: 1rem; margin-bottom: 30px;'>
                                                        <b style='color: #1976d2;'>L∆∞u √Ω:</b> ƒê√°nh gi√° c·ªßa b·∫°n s·∫Ω gi√∫p ch√∫ng t√¥i c·∫£i thi·ªán d·ªãch v·ª• t·ªët h∆°n.<br>
                                                        N·∫øu c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o, vui l√≤ng li√™n h·ªá: <a href='mailto:support@traveltour.com' style='color: #1976d2;'>support@traveltour.com</a> ho·∫∑c hotline: 1900 xxxx.
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style='padding: 0 32px 28px 32px; text-align: left; font-family: Segoe UI, Arial, sans-serif; color: #888; font-size: 0.98rem; border-top: 1px solid #eee;'>
                                                    <div style='margin-top: 24px;'>
                                                        <span style='color: #888;'>¬© %d TravelTour. M·ªçi quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</span><br>
                                                        <span style='color: #888;'>ƒê·ªãa ch·ªâ: 123 ƒê∆∞·ªùng Du L·ªãch, Qu·∫≠n 1, TP.HCM</span>
                                                    </div>
                                                </td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                            </table>
                        </body>
                        </html>
                        """,
                tourName, endDate, webFeedbackLink, appFeedbackLink, java.time.Year.now().getValue());

        // G·ª≠i email cho t·∫•t c·∫£ email duy nh·∫•t
        for (String email : uniqueEmails) {
            try {
                MimeMessage mimeMessage = emailSender.createMimeMessage();
                MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true, "UTF-8");
                helper.setTo(email);
                helper.setSubject(subject);
                helper.setText(content, true);
                helper.setFrom("feedback@traveltour.com", "TravelTour Feedback");
                emailSender.send(mimeMessage);
                logger.info("Successfully sent feedback request email to: {}", email);
            } catch (Exception e) {
                logger.error("Failed to send feedback request email to: {}. Error: {}", email, e.getMessage());
                // Ti·∫øp t·ª•c g·ª≠i cho c√°c email kh√°c n·∫øu m·ªôt email b·ªã l·ªói
            }
        }
    }

    public void sendTourReminderEmail(String to, String userName, String tourName, String startDate,
            String endDate, String tourDetails) {
        String subject = "Nh·∫Øc nh·ªü: Tour " + tourName + " s·∫Ω b·∫Øt ƒë·∫ßu sau 2 ng√†y";
        String content = String.format(
                """
                        <html>
                        <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                            <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                                <h2 style="color: #1976d2;">Xin ch√†o %s,</h2>
                                <p>Tour <strong>%s</strong> c·ªßa b·∫°n s·∫Ω b·∫Øt ƒë·∫ßu sau <strong>2 ng√†y</strong> (ng√†y <strong>%s</strong>) v√† k·∫øt th√∫c v√†o ng√†y <strong>%s</strong>.</p>

                                <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin: 20px 0;">
                                    <h3 style="color: #28a745; margin-top: 0;">Th√¥ng tin quan tr·ªçng:</h3>
                                    <p><strong>Th·ªùi gian t·∫≠p trung:</strong> 30 ph√∫t tr∆∞·ªõc gi·ªù kh·ªüi h√†nh</p>
                                    <p><strong>Ng√†y kh·ªüi h√†nh:</strong> %s</p>
                                </div>

                                <div style="background-color: #e8f4f8; padding: 15px; border-radius: 5px; margin: 20px 0;">
                                    <h3 style="color: #17a2b8; margin-top: 0;">Chi ti·∫øt tour:</h3>
                                    %s
                                </div>

                                <div style="background-color: #fff3cd; padding: 15px; border-radius: 5px; margin: 20px 0;">
                                    <h3 style="color: #856404; margin-top: 0;">L∆∞u √Ω quan tr·ªçng:</h3>
                                    <ul>
                                        <li>Vui l√≤ng mang theo gi·∫•y t·ªù t√πy th√¢n (CMND/CCCD/H·ªô chi·∫øu)</li>
                                        <li>Mang theo ƒë·ªì d√πng c√° nh√¢n c·∫ßn thi·∫øt</li>
                                        <li>ƒê·∫øn ƒë√∫ng ƒëi·ªÉm h·∫πn tr∆∞·ªõc gi·ªù kh·ªüi h√†nh</li>
                                        <li>Ki·ªÉm tra l·∫°i h√†nh l√Ω v√† ƒë·ªì d√πng c√° nh√¢n</li>
                                        <li>Chu·∫©n b·ªã s·∫µn s√†ng cho chuy·∫øn ƒëi</li>
                                    </ul>
                                </div>

                                <p>N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i qua:</p>
                                <ul>
                                    <li>Hotline: 1900 xxxx</li>
                                    <li>Email: support@traveltour.com</li>
                                </ul>

                                <p>Ch√∫c b·∫°n c√≥ m·ªôt chuy·∫øn ƒëi th√∫ v·ªã!</p>
                                <p>Tr√¢n tr·ªçng,<br>ƒê·ªôi ng≈© TravelTour</p>
                            </div>
                        </body>
                        </html>
                        """,
                userName, tourName, startDate, endDate, startDate, tourDetails);
        sendHtmlEmail(to, subject, content);
    }

    // Method m·ªõi ƒë·ªÉ g·ª≠i email nh·∫Øc nh·ªü cho t·∫•t c·∫£ passengers
    public void sendTourReminderEmailToAllPassengers(User user, List<BookingPassenger> passengers, 
            String tourName, String startDate, String endDate, String tourDetails) {
        logger.info("Preparing to send tour reminder email to all passengers with emails");
        
        // T·∫°o danh s√°ch email duy nh·∫•t
        Set<String> uniqueEmails = new HashSet<>();
        
        // Th√™m email c·ªßa user ch√≠nh
        if (user.getEmail() != null && !user.getEmail().trim().isEmpty()) {
            uniqueEmails.add(user.getEmail().trim());
        }
        
        // Th√™m email c·ªßa t·∫•t c·∫£ passengers c√≥ email
        for (BookingPassenger passenger : passengers) {
            if (passenger.getEmail() != null && !passenger.getEmail().trim().isEmpty()) {
                uniqueEmails.add(passenger.getEmail().trim());
            }
        }

        logger.info("Sending tour reminder email to {} unique email addresses: {}", 
                   uniqueEmails.size(), uniqueEmails);

        String subject = "Nh·∫Øc nh·ªü: Tour " + tourName + " s·∫Ω b·∫Øt ƒë·∫ßu sau 1 ng√†y";
        String content = String.format(
                """
                        <html>
                        <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                            <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                                <h2 style="color: #1976d2;">Xin ch√†o,</h2>
                                <p>Tour <strong>%s</strong> s·∫Ω b·∫Øt ƒë·∫ßu sau <strong>1 ng√†y</strong> (ng√†y <strong>%s</strong>) v√† k·∫øt th√∫c v√†o ng√†y <strong>%s</strong>.</p>

                                <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin: 20px 0;">
                                    <h3 style="color: #28a745; margin-top: 0;">Th√¥ng tin quan tr·ªçng:</h3>
                                    <p><strong>Th·ªùi gian t·∫≠p trung:</strong> 30 ph√∫t tr∆∞·ªõc gi·ªù kh·ªüi h√†nh</p>
                                    <p><strong>Ng√†y kh·ªüi h√†nh:</strong> %s</p>
                                </div>

                                <div style="background-color: #e8f4f8; padding: 15px; border-radius: 5px; margin: 20px 0;">
                                    <h3 style="color: #17a2b8; margin-top: 0;">Chi ti·∫øt tour:</h3>
                                    %s
                                </div>

                                <div style="background-color: #fff3cd; padding: 15px; border-radius: 5px; margin: 20px 0;">
                                    <h3 style="color: #856404; margin-top: 0;">L∆∞u √Ω quan tr·ªçng:</h3>
                                    <ul>
                                        <li>Vui l√≤ng mang theo gi·∫•y t·ªù t√πy th√¢n (CMND/CCCD/H·ªô chi·∫øu)</li>
                                        <li>Mang theo ƒë·ªì d√πng c√° nh√¢n c·∫ßn thi·∫øt</li>
                                        <li>ƒê·∫øn ƒë√∫ng ƒëi·ªÉm h·∫πn tr∆∞·ªõc gi·ªù kh·ªüi h√†nh</li>
                                        <li>Ki·ªÉm tra l·∫°i h√†nh l√Ω v√† ƒë·ªì d√πng c√° nh√¢n</li>
                                        <li>Chu·∫©n b·ªã s·∫µn s√†ng cho chuy·∫øn ƒëi</li>
                                    </ul>
                                </div>

                                <p>N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i qua:</p>
                                <ul>
                                    <li>Hotline: 1900 xxxx</li>
                                    <li>Email: support@traveltour.com</li>
                                </ul>

                                <p>Ch√∫c b·∫°n c√≥ m·ªôt chuy·∫øn ƒëi th√∫ v·ªã!</p>
                                <p>Tr√¢n tr·ªçng,<br>ƒê·ªôi ng≈© TravelTour</p>
                            </div>
                        </body>
                        </html>
                        """,
                tourName, startDate, endDate, startDate, tourDetails);

        // G·ª≠i email cho t·∫•t c·∫£ email duy nh·∫•t
        for (String email : uniqueEmails) {
            try {
                sendHtmlEmail(email, subject, content);
            } catch (Exception e) {
                logger.error("Failed to send tour reminder email to: {}. Error: {}", email, e.getMessage());
                // Ti·∫øp t·ª•c g·ª≠i cho c√°c email kh√°c n·∫øu m·ªôt email b·ªã l·ªói
            }
        }
    }

    public void sendTourItineraryEmail(String to, String userName, String tourName, String startDate,
            String endDate, List<TourItineraryDTO> itineraries) {
        String subject = "Chi ti·∫øt l·ªãch tr√¨nh tour " + tourName;
        StringBuilder itineraryHtml = new StringBuilder();
        int idx = 1;
        for (TourItineraryDTO itinerary : itineraries) {
            itineraryHtml.append("<div style='margin-bottom: 20px; padding: 15px; border: 1px solid #ddd; border-radius: 5px;'>")
                    .append("<h4 style='color: #1976d2; margin-top: 0;'>Ng√†y ").append(idx).append("</h4>")
                    .append("<p><strong>Ti√™u ƒë·ªÅ:</strong> ").append(itinerary.getTitle()).append("</p>")
                    .append("<p><strong>Lo·∫°i ho·∫°t ƒë·ªông:</strong> ").append(itinerary.getType() != null ? itinerary.getType() : "Kh√¥ng c√≥ th√¥ng tin").append("</p>")
                    .append("<p><strong>Th·ªùi gian:</strong> ").append(itinerary.getStartTime() != null ? itinerary.getStartTime().toString() : "N/A")
                    .append(" - ").append(itinerary.getEndTime() != null ? itinerary.getEndTime().toString() : "N/A").append("</p>")
                    .append("<p><strong>M√¥ t·∫£:</strong> ").append(itinerary.getDescription() != null ? itinerary.getDescription() : "Kh√¥ng c√≥ th√¥ng tin").append("</p>")
                    .append("<style>")
                    .append("div { background-color: #f8f9fa; }")
                    .append("h4 { color: #1976d2; }")
                    .append("p { margin: 5px 0; }")
                    .append("</style>")
                    .append("</div>");
            idx++;
        }

        String content = String.format(
                """
                        <html>
                        <head>
                            <meta charset="UTF-8">
                        </head>
                        <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                            <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                                <h2 style="color: #1976d2;">Xin ch√†o %s,</h2>
                                <p>Tour <strong>%s</strong> c·ªßa b·∫°n s·∫Ω b·∫Øt ƒë·∫ßu v√†o ng√†y <strong>%s</strong> v√† k·∫øt th√∫c v√†o ng√†y <strong>%s</strong>.</p>

                                <div style="margin: 20px 0;">
                                    <h3 style="color: #17a2b8; margin-bottom: 20px;">Chi ti·∫øt l·ªãch tr√¨nh:</h3>
                                    %s
                                </div>

                                <div style="background-color: #fff3cd; padding: 15px; border-radius: 5px; margin: 20px 0;">
                                    <h3 style="color: #856404; margin-top: 0;">L∆∞u √Ω quan tr·ªçng:</h3>
                                    <ul style="padding-left: 20px;">
                                        <li>Vui l√≤ng ƒë·∫øn ƒë√∫ng ƒëi·ªÉm h·∫πn tr∆∞·ªõc gi·ªù kh·ªüi h√†nh</li>
                                        <li>Mang theo gi·∫•y t·ªù t√πy th√¢n (CMND/CCCD/H·ªô chi·∫øu)</li>
                                        <li>Chu·∫©n b·ªã ƒë·ªì d√πng c√° nh√¢n c·∫ßn thi·∫øt</li>
                                        <li>Tu√¢n th·ªß c√°c quy ƒë·ªãnh v√† h∆∞·ªõng d·∫´n c·ªßa h∆∞·ªõng d·∫´n vi√™n</li>
                                    </ul>
                                </div>

                                <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin: 20px 0;">
                                    <h3 style="color: #28a745; margin-top: 0;">Th√¥ng tin li√™n h·ªá:</h3>
                                    <ul style="padding-left: 20px;">
                                        <li>Hotline: 1900 xxxx</li>
                                        <li>Email: support@traveltour.com</li>
                                    </ul>
                                </div>

                                <p style="margin-top: 20px;">Ch√∫c b·∫°n c√≥ m·ªôt chuy·∫øn ƒëi th√∫ v·ªã!</p>
                                <p>Tr√¢n tr·ªçng,<br>ƒê·ªôi ng≈© TravelTour</p>
                            </div>
                        </body>
                        </html>
                        """,
                userName, tourName, startDate, endDate, itineraryHtml.toString());

        try {
            MimeMessage mimeMessage = emailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true, "UTF-8");
            helper.setTo(to);
            helper.setSubject(subject);
            helper.setText(content, true);
            helper.setFrom("noreply@traveltour.com", "TravelTour");
            emailSender.send(mimeMessage);
            logger.info("Successfully sent HTML email to: {}", to);
        } catch (Exception e) {
            logger.error("Failed to send HTML email to: {}. Error: {}", to, e.getMessage());
            e.printStackTrace();
        }
    }

    // Method m·ªõi ƒë·ªÉ g·ª≠i email chi ti·∫øt l·ªãch tr√¨nh cho t·∫•t c·∫£ passengers
    public void sendTourItineraryEmailToAllPassengers(User user, List<BookingPassenger> passengers,
            String tourName, String startDate, String endDate, List<TourItineraryDTO> itineraries) {
        logger.info("Preparing to send tour itinerary email to all passengers with emails");
        
        // T·∫°o danh s√°ch email duy nh·∫•t
        Set<String> uniqueEmails = new HashSet<>();
        
        // Th√™m email c·ªßa user ch√≠nh
        if (user.getEmail() != null && !user.getEmail().trim().isEmpty()) {
            uniqueEmails.add(user.getEmail().trim());
        }
        
        // Th√™m email c·ªßa t·∫•t c·∫£ passengers c√≥ email
        for (BookingPassenger passenger : passengers) {
            if (passenger.getEmail() != null && !passenger.getEmail().trim().isEmpty()) {
                uniqueEmails.add(passenger.getEmail().trim());
            }
        }

        logger.info("Sending tour itinerary email to {} unique email addresses: {}", 
                   uniqueEmails.size(), uniqueEmails);

        String subject = "Chi ti·∫øt l·ªãch tr√¨nh tour " + tourName;
        StringBuilder itineraryHtml = new StringBuilder();
        int idx = 1;
        for (TourItineraryDTO itinerary : itineraries) {
            itineraryHtml.append("<div style='margin-bottom: 20px; padding: 15px; border: 1px solid #ddd; border-radius: 5px;'>")
                    .append("<h4 style='color: #1976d2; margin-top: 0;'>Ng√†y ").append(idx).append("</h4>")
                    .append("<p><strong>Ti√™u ƒë·ªÅ:</strong> ").append(itinerary.getTitle()).append("</p>")
                    .append("<p><strong>Lo·∫°i ho·∫°t ƒë·ªông:</strong> ").append(itinerary.getType() != null ? itinerary.getType() : "Kh√¥ng c√≥ th√¥ng tin").append("</p>")
                    .append("<p><strong>Th·ªùi gian:</strong> ").append(itinerary.getStartTime() != null ? itinerary.getStartTime().toString() : "N/A")
                    .append(" - ").append(itinerary.getEndTime() != null ? itinerary.getEndTime().toString() : "N/A").append("</p>")
                    .append("<p><strong>M√¥ t·∫£:</strong> ").append(itinerary.getDescription() != null ? itinerary.getDescription() : "Kh√¥ng c√≥ th√¥ng tin").append("</p>")
                    .append("<style>")
                    .append("div { background-color: #f8f9fa; }")
                    .append("h4 { color: #1976d2; }")
                    .append("p { margin: 5px 0; }")
                    .append("</style>")
                    .append("</div>");
            idx++;
        }

        String content = String.format(
                """
                        <html>
                        <head>
                            <meta charset="UTF-8">
                        </head>
                        <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                            <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                                <h2 style="color: #1976d2;">Xin ch√†o,</h2>
                                <p>Tour <strong>%s</strong> s·∫Ω b·∫Øt ƒë·∫ßu v√†o ng√†y <strong>%s</strong> v√† k·∫øt th√∫c v√†o ng√†y <strong>%s</strong>.</p>

                                <div style="margin: 20px 0;">
                                    <h3 style="color: #17a2b8; margin-bottom: 20px;">Chi ti·∫øt l·ªãch tr√¨nh:</h3>
                                    %s
                                </div>

                                <div style="background-color: #fff3cd; padding: 15px; border-radius: 5px; margin: 20px 0;">
                                    <h3 style="color: #856404; margin-top: 0;">L∆∞u √Ω quan tr·ªçng:</h3>
                                    <ul style="padding-left: 20px;">
                                        <li>Vui l√≤ng ƒë·∫øn ƒë√∫ng ƒëi·ªÉm h·∫πn tr∆∞·ªõc gi·ªù kh·ªüi h√†nh</li>
                                        <li>Mang theo gi·∫•y t·ªù t√πy th√¢n (CMND/CCCD/H·ªô chi·∫øu)</li>
                                        <li>Chu·∫©n b·ªã ƒë·ªì d√πng c√° nh√¢n c·∫ßn thi·∫øt</li>
                                        <li>Tu√¢n th·ªß c√°c quy ƒë·ªãnh v√† h∆∞·ªõng d·∫´n c·ªßa h∆∞·ªõng d·∫´n vi√™n</li>
                                    </ul>
                                </div>

                                <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin: 20px 0;">
                                    <h3 style="color: #28a745; margin-top: 0;">Th√¥ng tin li√™n h·ªá:</h3>
                                    <ul style="padding-left: 20px;">
                                        <li>Hotline: 1900 xxxx</li>
                                        <li>Email: support@traveltour.com</li>
                                    </ul>
                                </div>

                                <p style="margin-top: 20px;">Ch√∫c b·∫°n c√≥ m·ªôt chuy·∫øn ƒëi th√∫ v·ªã!</p>
                                <p>Tr√¢n tr·ªçng,<br>ƒê·ªôi ng≈© TravelTour</p>
                            </div>
                        </body>
                        </html>
                        """,
                tourName, startDate, endDate, itineraryHtml.toString());

        // G·ª≠i email cho t·∫•t c·∫£ email duy nh·∫•t
        for (String email : uniqueEmails) {
            try {
                sendHtmlEmail(email, subject, content);
            } catch (Exception e) {
                logger.error("Failed to send tour itinerary email to: {}. Error: {}", email, e.getMessage());
                // Ti·∫øp t·ª•c g·ª≠i cho c√°c email kh√°c n·∫øu m·ªôt email b·ªã l·ªói
            }
        }
    }

    public void sendGuideAssignmentEmail(String to, String guideName, String tourName, String tourDesc,
            String startDate, String endDate, List<Map<String, String>> customers) {
        try {
            StringBuilder customerRows = new StringBuilder();
            for (Map<String, String> c : customers) {
                customerRows.append(String.format("""
                            <tr>
                                <td style='padding: 10px; border-bottom: 1px solid #ddd;'>%s</td>
                                <td style='padding: 10px; border-bottom: 1px solid #ddd;'>%s</td>
                            </tr>
                        """, c.getOrDefault("name", "N/A"), c.getOrDefault("phone", "N/A")));
            }
            String content = String.format(
                    """
                                <html>
                                <head><meta charset='UTF-8'></head>
                                <body style='font-family: Arial, sans-serif; color: #333;'>
                                    <div style='max-width: 600px; margin: 0 auto; padding: 20px;'>
                                        <h2 style='color: #1976d2;'>Xin ch√†o %s,</h2>
                                        <p>B·∫°n v·ª´a ƒë∆∞·ª£c ph√¢n c√¥ng l√†m h∆∞·ªõng d·∫´n vi√™n cho tour <b>%s</b>.</p>
                                        <p><b>M√¥ t·∫£ tour:</b> %s</p>
                                        <p><b>L·ªãch tr√¨nh:</b> %s - %s</p>
                                        <h3 style='color: #1976d2;'>Danh s√°ch kh√°ch h√†ng</h3>
                                        <table style='width: 100%%; border-collapse: collapse;'>
                                            <tr style='background-color: #f8f9fa;'>
                                                <th style='padding: 10px; text-align: left; border-bottom: 1px solid #ddd;'>H·ªç v√† t√™n</th>
                                                <th style='padding: 10px; text-align: left; border-bottom: 1px solid #ddd;'>S·ªë ƒëi·ªán tho·∫°i</th>
                                            </tr>
                                            %s
                                        </table>
                                        <div style='margin-top: 30px; color: #666;'>
                                            <p>Ch√∫c b·∫°n c√≥ m·ªôt chuy·∫øn ƒëi th√†nh c√¥ng!</p>
                                            <p>Tr√¢n tr·ªçng,<br>ƒê·ªôi ng≈© TravelTour</p>
                                        </div>
                                    </div>
                                </body>
                                </html>
                            """,
                    guideName, tourName, tourDesc, startDate, endDate, customerRows.toString());
            MimeMessage mimeMessage = emailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true, "UTF-8");
            helper.setTo(to);
            helper.setSubject("Ph√¢n c√¥ng h∆∞·ªõng d·∫´n vi√™n cho tour " + tourName);
            helper.setText(content, true);
            helper.setFrom("noreply@traveltour.com", "TravelTour");
            emailSender.send(mimeMessage);
            logger.info("Successfully sent guide assignment email to: {}", to);
        } catch (Exception e) {
            logger.error("Failed to send guide assignment email to: {}. Error: {}", to, e.getMessage());
        }
    }

    public void sendSimpleEmail(String to, String subject, String content) {
        logger.info("Sending simple email to: {}", to);
        try {
            SimpleMailMessage message = new SimpleMailMessage();
            message.setTo(to);
            message.setSubject(subject);
            message.setText(content);
            emailSender.send(message);
            logger.info("Successfully sent simple email to: {}", to);
        } catch (Exception e) {
            logger.error("Failed to send simple email to: {}. Error: {}", to, e.getMessage());
        }
    }
}